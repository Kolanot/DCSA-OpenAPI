openapi: 3.0.0
info:
  version: "2.0.0"
  title: 'DCSA Track and Trace API'
  description: 'API specifications for the Track and Trace interface standard 1.0 issued by DCSA.org'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
tags:
  - name: Events
    description: Event operations 
  - name: Operational Vessel Schedules
    description: Operational Vessel Schedules operations
  - name: Subscriptions
    description: Subscription operations
paths:
  /events:
    get:
      tags:
        - Events
      summary: Find events by type, Booking Reference, Bill of Lading or Equipment Reference. 
      description: Returns all events filtered by the parameters.
      parameters:
        - in: query
          name: eventType
          description: The type of event(s) to filter by.
          required: false
          schema:
            $ref: '#/components/schemas/eventTypeList'
        - in: query
          name: bookingReference
          description: The identifier for a shipment, which is issued by and unique within each of the carriers.
          required: false
          schema:
            $ref: '#/components/schemas/bookingReference'
        - in: query
          name: billOfLadingNumber
          description:  Bill of lading number is an identifier that links to a shipment. Bill of Lading is the legal document issued to the customer, which confirms the carrier's receipt of the cargo from the customer acknowledging goods being shipped and specifying the terms of delivery.
          required: false
          schema:
            $ref: '#/components/schemas/billOfLadingNumber'    
        - in: query
          name: equipmentReference
          description: The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.
          required: false
          schema:
            $ref: '#/components/schemas/equipmentReference'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /events/{eventID}:
    get:
      parameters:
        - in: path
          name: eventID
          schema:
            type: string
          required: true
          description: The ID of the event to receive
      tags:
        - Events
      summary: Find events by eventID. 
      description: Returns event with the specified eventID.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/transportEvent'
                  - $ref: '#/components/schemas/shipmentEvent'
                  - $ref: '#/components/schemas/equipmentEvent'
                  - $ref: '#/components/schemas/transportEquipmentEvent'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /event-subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Receive a list of your active subscriptionIDs
      responses: 
        '200':
          description: Returns a list of event subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/eventSubscription'
    post:
      tags:
      - Subscriptions
      summary: Subscribe to an event webhook
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventSubscriptionCreate'
      responses:
        '201':
          description: Webhook created  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      callbacks:
        event:
          '{$request.body.callbackUrl}':
            post:   # Method
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/events'
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
  /event-subscriptions/{subscriptionID}:
    get:
      tags:
      - Subscriptions
      summary: Find event subscription by subscription ID
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to receive
      responses:
        '200':
          description: Subscription returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
    delete:
      tags:
      - Subscriptions
      summary: Stop an event subscription, using the subscription ID
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to delete
      responses:
        '204':
          description: Webhook deleted  
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
    put:
      tags:
      - Subscriptions
      summary: Alter an event webhook
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to alter
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventSubscription'
      responses:
        '200':
          description: Webhook updated  
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/eventSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'   
  /schedules:
    get:
      tags:
        - Operational Vessel Schedules
      summary: Find schedules
      description: Returns all schedules filtered by the parameters.
      parameters:
        - in: query
          name: dateRange
          description: |
             The time period in weeks for which schedule information should be sent. Any numeric value between 1 and 12 weeks is allowed. If not provided, the schedule will be sent for the whole period the vessel operator has defined a schedule.  The vessel operator should send the schedule for the whole period it is defined, if less than the range requested. If a voyage begins during the date range but extends past the end of the range, the schedule for the entire voyage will be sent. Similarly, if a voyage has already begun prior to the period but is still ongoing it will also be included.
          required: true
          schema:
            $ref: '#/components/schemas/dateRange'
        - in: query
          name: carrierServiceCode
          description: The code of the service for which information should be sent. This is the code used by the vessel operator for that service and should be part of a VSA agreement between the subscribing vessel operator and the vessel operator
          required: false
          schema:
            $ref: '#/components/schemas/carrierServiceCode'
        - in: query
          name: vesselIMONumber
          description: The identifier of the vessel for which schedule information is sent. If not provided, the schedule is sent for all vessels.
          required: false
          schema:
            $ref: '#/components/schemas/vesselIMONumber'    
        - in: query
          name: voyageNumber
          description: The vessel operator assigned voyage number for the respective voyage.
          required: false
          schema:
            $ref: '#/components/schemas/carrierVoyageNumber'
        - in: query
          name: UNLocationCode
          description: The UN location code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country.
          required: false
          schema:
            $ref: '#/components/schemas/UNLocationCode'    
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/schedule'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /schedules/{scheduleID}:
    get:
      parameters:
        - in: path
          name: scheduleID
          schema:
            type: string
          required: true
          description: The ID of the schedule to receive
      tags:
        - Operational Vessel Schedules
      summary: Find schedule by scheduleID. 
      description: Returns event with the specified scheduleID.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedule'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /schedules/{scheduleID}/transport-calls:
    get:
      tags:
        - Operational Vessel Schedules
      summary: Find transport Calls
      description: Returns all Transport Calls filtered by the parameters.
      parameters:
        - in: path
          name: scheduleID
          schema:
            type: string
          required: true
          description: The ID of the Schedule to filter by. This value can be * for all Schedules.
        - in: query
          name: carrierServiceCode
          description: The code of the service for which information should be sent. This is the code used by the vessel operator for that service and should be part of a VSA agreement between the subscribing vessel operator and the vessel operator
          required: false
          schema:
            $ref: '#/components/schemas/carrierServiceCode'
        - in: query
          name: vesselIMONumber
          description: The identifier of the vessel for which schedule information is sent. If not provided, the schedule is sent for all vessels.
          required: false
          schema:
            $ref: '#/components/schemas/vesselIMONumber'    
        - in: query
          name: carrierVoyageNumber
          description: The vessel operator assigned voyage number for the respective voyage.
          required: false
          schema:
            $ref: '#/components/schemas/carrierVoyageNumber'
        - in: query
          name: UNLocationCode
          description: The UN location code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country.
          required: false
          schema:
            $ref: '#/components/schemas/UNLocationCode'    
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transportCall'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /schedules/{scheduleID}/transport-calls/{transportCallID}:
    get:
      parameters:
        - in: path
          name: scheduleID
          schema:
            type: string
          required: true
          description: The ID of the Schedule to filter by. This value can be * for all Schedules.
        - in: path
          name: transportCallID
          schema:
            type: string
          required: true
          description: The ID of the Transport Call to filter by. 
      tags:
        - Operational Vessel Schedules
      summary: Find schedule by transportCallID. 
      description: Returns event with the specified transportCallID.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transportCall'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /schedules/{scheduleID}/transport-calls/{transportCallID}/transportevents:
    get:
      tags:
        - Operational Vessel Schedules
      summary: Find Transport Events by transportCallID
      description: Returns all Transport Events related to the scheduleID and transportCallID.
      parameters:
        - in: path
          name: scheduleID
          schema:
            type: string
          required: true
          description: The ID of the Schedule to filter by. This value can be * for all Schedules.
        - in: path
          name: transportCallID
          schema:
            type: string
          required: true
          description: The ID of the Transport Call to filter by. This value can be * for all Transport Calls.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transportCall'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /schedule/{scheduleID}/transport-calls/{transportCallID}/transportEvents/{eventID}:
    get:
      parameters:
        - in: path
          name: scheduleID
          schema:
            type: string
          required: true
          description: The ID of the Schedule to filter by. This value can be * for all Schedules.
        - in: path
          name: transportCallID
          schema:
            type: string
          required: true
          description: The ID of the Transport Call to filter by. This value can be * for all Transport Calls.
        - in: path
          name: eventID
          schema:
            type: string
          required: true
          description: The ID of the Event to filter by. 
      tags:
        - Operational Vessel Schedules
      summary: Find Transport Event by eventID. 
      description: Returns Tranport Event with the specified eventID.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transportEvent'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /schedule-subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Receive a list of your active subscriptionIDs
      responses: 
        '200':
          description: Returns a list of schedule subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/scheduleSubscription'
    post:
      tags:
      - Subscriptions
      summary: Subscribe to a schedule webhook
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleSubscriptionCreate'
      responses:
        '201':
          description: Webhook created  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      callbacks:
        event:
          '{$request.body.callbackUrl}':
            post:   # Method
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/schedule'
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
  /schedule-subscriptions/{subscriptionID}:
    get:
      tags:
      - Subscriptions
      summary: Find schedule subscription by subscription ID
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to receive
      responses:
        '200':
          description: Subscription returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
    delete:
      tags:
      - Subscriptions
      summary: Stop a schedule subscription, using the subscription ID
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to delete
      responses:
        '204':
          description: Webhook deleted  
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
    put:
      tags:
      - Subscriptions
      summary: Alter a schedule webhook
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to alter
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleSubscription'
      responses:
        '200':
          description: Webhook updated  
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/scheduleSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'   

  /transport-call-subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Receive a list of your active subscriptionIDs
      responses: 
        '200':
          description: Returns a list of Transport Call subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transportCallSubscription'
    post:
      tags:
      - Subscriptions
      summary: Subscribe to a Transport Call webhook
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transportCallSubscriptionCreate'
      responses:
        '201':
          description: Webhook created  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transportCallSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      callbacks:
        event:
          '{$request.body.callbackUrl}':
            post:   # Method
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/transportCall'
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
  /tranport-call-subscriptions/{subscriptionID}:
    get:
      tags:
      - Subscriptions
      summary: Find Transport Call subscription by subscription ID
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to receive
      responses:
        '200':
          description: Subscription returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transportCallSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
    delete:
      tags:
      - Subscriptions
      summary: Stop a Transport Call subscription, using the subscription ID
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to delete
      responses:
        '204':
          description: Webhook deleted  
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
    put:
      tags:
      - Subscriptions
      summary: Alter a Transport Call webhook
      parameters:
        - in: path
          name: subscriptionID
          schema:
            type: string
          required: true
          description: The ID of the subscription to alter
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transportCallSubscription'
      responses:
        '200':
          description: Webhook updated  
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/transportCallSubscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'  
      
components:
  schemas:
    event:
      description: The event entity is described as a generalization of all the specific event categories. An event always takes place in relation to a shipment and can additionally be linked to a transport or an equipment
      type: object
      properties:
        eventID:
          $ref: '#/components/schemas/eventID'
        eventType:
          $ref: '#/components/schemas/eventType'
        eventDateTime:
          $ref: '#/components/schemas/eventDateTime'
        eventClassifierCode:
          $ref: '#/components/schemas/eventClassifierCode'
        eventTypeCode:
          $ref: '#/components/schemas/eventTypeCode'
      required:
        - eventID
        - eventType
        - eventDateTime
        - eventClassifierCode
        - eventTypeCode
    shipmentEvent:
      description: The shipment event entity is a specialization of the event entity to support specification of data that only applies to a shipment event.
      allOf:
        - $ref: '#/components/schemas/event'
        - type: object
          properties:
            eventType: #Overriding this property to have correct payload response examples
              type: string
              example: SHIPMENT
              nullable: false
              enum:
                - SHIPMENT
            shipmentInformationTypeCode:
              $ref: '#/components/schemas/shipmentInformationTypeCode'
          required:
            - shipmentInformationTypeCode
    transportEvent:
      description: The transport event entity is a specialization of the event entity to support specification of data that only applies to a transport event.
      allOf:
        - $ref: '#/components/schemas/event'
        - type: object
          properties:
            eventType: #Overriding this property to have correct payload response examples
              type: string
              example: TRANSPORT
              nullable: false
              enum:
                - TRANSPORT
            transportCallID:
              $ref: '#/components/schemas/transportCallID'
            voyageFacilitySequenceNumber:
              $ref: '#/components/schemas/voyageFacilitySequenceNumber'
            facilityTypeCode:
              $ref: '#/components/schemas/facilityTypeCode'
            facilityCode:
              $ref: '#/components/schemas/facilityCode'
            otherFacility:
              $ref: '#/components/schemas/otherFacility'
            delayReasonCode:
              $ref: '#/components/schemas/delayReasonCode'
            vesselScheduleChangeRemark:
              $ref: '#/components/schemas/vesselScheduleChangeRemark'
          required:
            - facilityTypeCode
            - UNLocationCode
            - facilityCode
    equipmentEvent:
      description: The equipment event entity is a specialization of the event entity to support specification of data that only applies to an equipment event.
      allOf:
        - $ref: '#/components/schemas/event'
        - type: object
          properties:
            eventType: #Overriding this property to have correct payload response examples
              type: string
              example: EQUIPMENT
              nullable: false
              enum:
                - EQUIPMENT
            equipmentReference:
              $ref: '#/components/schemas/equipmentReference'
            facilityTypeCode:
              $ref: '#/components/schemas/facilityTypeCode'
            UNLocationCode:
              $ref: '#/components/schemas/UNLocationCode'
            facilityCode:
              $ref: '#/components/schemas/facilityCode'
            otherFacility:
              $ref: '#/components/schemas/otherFacility'
            emptyIndicatorCode:
              $ref: '#/components/schemas/emptyIndicatorCode'
          required:
            - facilityTypeCode
            - UNLocationCode
            - facilityCode
            - emptyIndicatorCode
    transportEquipmentEvent:
      description: The transport equipment event entity is a specialization of the event entity to support specification of data that applies to both transport and equipment events.
      allOf:
        - $ref: '#/components/schemas/event'
        - type: object
          properties:
            eventType: #Overriding this property to have correct payload response examples
              type: string
              example: TRANSPORTEQUIPMENT
              nullable: false
              enum:
                - TRANSPORTEQUIPMENT
            transportReference:
              $ref: '#/components/schemas/transportReference'
            transportLegReference:
              $ref: '#/components/schemas/transportLegReference'
            equipmentReference:
              $ref: '#/components/schemas/equipmentReference'
            facilityTypeCode:
              $ref: '#/components/schemas/facilityTypeCode'
            UNLocationCode:
              $ref: '#/components/schemas/UNLocationCode'
            facilityCode:
              $ref: '#/components/schemas/facilityCode'
            otherFacility:
              $ref: '#/components/schemas/otherFacility'
            emptyIndicatorCode:
              $ref: '#/components/schemas/emptyIndicatorCode'
            modeOfTransportCode:
              $ref: '#/components/schemas/modeOfTransportCode'
          required:
            - transportReference
            - transportLegReference
            - facilityTypeCode
            - UNLocationCode
            - facilityCode
            - emptyIndicatorCode
    events:
      type: object
      description: List of events for shipment journey.
      properties:
        events:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/transportEvent'
              - $ref: '#/components/schemas/shipmentEvent'
              - $ref: '#/components/schemas/equipmentEvent'
              - $ref: '#/components/schemas/transportEquipmentEvent'
            discriminator:
              propertyName: eventType  
      required:
        - events
    error:
      type: object
      required:
        - httpMethod
        - requestUri
        - errors
        - statusCode
        - statusCodeText
        - errorDateTime
      properties:
        httpMethod:
          description: The HTTP request method type
          type: string
          example: POST
        requestUri:
          description: The request URI.
          type: string
          example: https://dcsa.org/dcsa/tnt/v1/events
        errors:
          $ref: '#/components/schemas/errors'
        statusCode:
          description: The HTTP status code
          type: string
          example: 400  
        statusCodeText:
          description: The textual representation of the response status.
          type: string
          example: Bad Request
        errorDateTime:
          description: The date and time (in ISO 8601 format) the error occured.
          type: string
          example: '2019-11-12T07:41:00+08:30'
    errors:
      type: array
      items: 
        type: object
        properties:
          reason:
            description: High level error message.
            type: string
            example: invalidQuery
          message:
            description: Detailed error message.
            type: string
            example: The request did not contain one of the three required query parameters. 
        required: 
         - reason
         - message
    eventSubscriptionCreate:
      description: The object used by the POST event-subscriptions endpoint
      type: object
      properties:
        callbackUrl:
          $ref: '#/components/schemas/callbackUrl'
        eventType:
          $ref: '#/components/schemas/eventTypeList'
        bookingReference:
          $ref: '#/components/schemas/bookingReference'
        billOfLadingNumber:
          $ref: '#/components/schemas/billOfLadingNumber'
        equipmentReference:
          $ref: '#/components/schemas/equipmentReference'
      required:
        - callbackUrl
    eventSubscription:
      allOf:
        - $ref: '#/components/schemas/subscriptionID'
        - $ref: '#/components/schemas/eventSubscriptionCreate'

    transportCallSubscriptionCreate:
      description: The object used by the POST transport-calls-subscriptions endpoint
      type: object
      properties:
        callbackUrl:
          $ref: '#/components/schemas/callbackUrl'
        vesselIMONumber:
          $ref: '#/components/schemas/vesselIMONumber'
        carrierVoyageNumber:
          $ref: '#/components/schemas/carrierVoyageNumber'
        UNLocationCode:
          $ref: '#/components/schemas/UNLocationCode'
      required:
        - callbackUrl
    transportCallSubscription:
      allOf:
        - $ref: '#/components/schemas/subscriptionID'
        - $ref: '#/components/schemas/transportCallSubscriptionCreate'    
    scheduleSubscriptionCreate:
      description: The object used by the POST event-subscriptions endpoint
      type: object
      allOf:
        - $ref: '#/components/schemas/transportCallSubscriptionCreate' 
      properties:
        callbackUrl:
          $ref: '#/components/schemas/callbackUrl'
        dateRange:
          $ref: '#/components/schemas/dateRange'
        carrierServiceCode:
          $ref: '#/components/schemas/carrierServiceCode'
      required:
        - callbackUrl
    scheduleSubscription:
      allOf:
        - $ref: '#/components/schemas/subscriptionID'
        - $ref: '#/components/schemas/scheduleSubscriptionCreate'    
    transportCall:
      description: placeholder
      type: object
      properties:
        transportCallID:
          $ref: '#/components/schemas/transportCallID'
        scheduleID:
          $ref: '#/components/schemas/scheduleID'
        carrierServiceCode:
         $ref: '#/components/schemas/carrierServiceCode'
        vesselIMONumber:
          $ref: '#/components/schemas/vesselIMONumber'
        vesselName:
          $ref: '#/components/schemas/vesselName'
        carrierVoyageNumber:
          $ref: '#/components/schemas/carrierVoyageNumber'
        UNLocationCode:
          $ref: '#/components/schemas/UNLocationCode'
        UNLocationName:
          $ref: '#/components/schemas/UNLocationName'
        voyagePortSequenceNumber:
          $ref: '#/components/schemas/voyagePortSequenceNumber'
    schedule:
      description: placeholder
      type: object
      properties:
        scheduleID:
          $ref: '#/components/schemas/scheduleID'
        vesselOperatorCarrierCode:
          $ref: '#/components/schemas/vesselOperatorCarrierCode'
        vesselOperatorCarrierCodeListProvider:
          $ref: '#/components/schemas/vesselOperatorCarrierCodeListProvider'
        vesselPartnerCarrierCode:
          $ref: '#/components/schemas/vesselPartnerCarrierCode'
        vesselPartnerCarrierCodeListProvider:
          $ref: '#/components/schemas/vesselPartnerCarrierCodeListProvider'
        dateRange:
          $ref: '#/components/schemas/dateRange'
####String variables below
    bookingReference:
      type: string
      example: ABC709951
      description: The identifier for a shipment, which is issued by and unique within each of the carriers.
    transportReference:
      type: string
      example: 9648714
      description: The reference for the transport, e.g. when the mode of transport is a vessel, the transport reference will be the vessel IMO number.
    equipmentReference:
      type: string
      example: APZU4812090
      description: The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible. If a container is not yet assigned to a shipment, the interface cannot return any information when an equipment reference is given as input. If a container is assigned to an (active) shipment, the interface returns information on the active shipment.
    billOfLadingNumber:
      type: string
      example: ABCD421911263977
      description: Bill of lading number is an identifier that links to a shipment. Bill of Lading is the legal document issued to the customer, which confirms the carrier's receipt of the cargo from the customer acknowledging goods being shipped and specifying the terms of delivery.
    facilityTypeCode:
      type: string
      example: POTE
      description: The code to identify the specific type of facility.
    UNLocationCode:
      type: string
      example: USNYC
      description: The UN Location Code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country.
    UNLocationName:
      description: The name of the UN Location identified by the UN location code above.
      type: string
      example: Singapore
    facilityCode:
      type: string
      example: AEAUHADT
      description: The code used for identifying the specific facility.
    otherFacility:
      type: string
      example: Depot location or address
      description: An alternative way to capture the facility when no standardized DCSA facility code can be found.
    emptyIndicatorCode:
      type: string
      example: Empty
      description: Code to denote whether the equipment is empty or laden.
    shipmentInformationTypeCode:
      type: string
      example: SRM
      description: The code to identify the type of information that is related to the shipment.
    transportLegReference:
      type: string
      example: 025E
      description: |
        The transport leg reference will be specific per mode of transport:
        - Vessel: Voyage number as specified by the vessel operator
        - Truck: Not yet specified
        - Rail: Not yet specified
        - Barge: Not yet specified.
    eventDateTime:
      type: string
      format: date-time
      example: '2019-11-12T07:41:00+08:30'
      description: The local date and time, where the event took place, in ISO 8601 format.
    eventID:
      type: string
      example: 1
      description: The unique identifier for the Equipment Event ID/Transport Event ID/Shipment Event ID.
    eventClassifierCode:
      type: string
      example: ACT
      description: Code for the event classifier, either PLN, ACT or EST.
    eventTypeCode:
      type: string
      example: ARRI
      description: Unique identifier for Event Type Code.
    modeOfTransportCode:
      type: string
      example: 1
      description: A code specifying a type of transport mode.
    subscriptionID:
      type: object
      properties:
        subscriptionID:
          type: string
          example: jlke123j
      description: The carrier issues a unique ID to the shipper or consignee for that subscription
    callbackUrl:   # Callback URL
      type: string
      format: uri
      example: https://myserver.com/send/callback/here
      description: Your server, where the API server should send the event data
    eventType:
      description: The Event Type of the object.
      nullable: false
      type: string
      enum: 
        - EQUIPMENT
        - SHIPMENT
        - TRANSPORT
        - TRANSPORTEQUIPMENT
    eventTypeList:
      description: A list of event types. Default is all events
      example: [EQUIPMENT,SHIPMENT,TRANSPORT,TRANSPORTEQUIPMENT]
      default: [EQUIPMENT,SHIPMENT,TRANSPORT,TRANSPORTEQUIPMENT]
      type: array
      items:
        $ref: '#/components/schemas/eventType'
    voyageFacilitySequenceNumber:
      description: Field contains sequence of facility call within port.
      type: string
      example: 2
    delayReasonCode:
      description: Reason code for the delay. The SMDG reference codes are used for this attribute.
      type: string
      example: WEA
    vesselScheduleChangeRemark:
      description: Free text information provided by the vessel operator regarding the reasons for the change in schedule and/or plans to mitigate schedule slippage.
      type: string
      example: Bad weather
    carrierServiceCode:
      description: The code of the service for which the schedule details are published.
      type: string
      example: FE1
    vesselIMONumber: 
      description: The identifier of vessel for which schedule details are published. Depending on schedule type, this may not be available yet.
      type: string
      example: 1801323
    vesselName:
      description: Name of the vessel identified by the IMO number.
      type: string
      example: EMMA MAERSK
    carrierVoyageNumber:
      description: The vessel operator assigned voyage number for the respective voyage.
      type: string
      example: 2015W
    voyagePortSequenceNumber:
      description: This field contains the sequence of the port call within the voyage. It is used to differentiate between two port calls to the same port as part of the voyage, for example.
      type: string
      example: 1
    scheduleID:
      description: ID uniquely identifying a schedule
      type: number
      example: 3
    vesselOperatorCarrierCode:
      description: The identifier of the vessel operator publishing the event.
      type: string
      example: MAEU
    vesselOperatorCarrierCodeListProvider:
      description: Identifies the code list provider used for the operator and partner carriercodes.
      type: string
      enum: [SMDG,NMFTA]
      example: NMFTA
    vesselPartnerCarrierCode:
      description: The identifier of the vessel partner for which the current message is intended. This field allows specifying multiple, comma-separated values if there is more than one vessel partner involved.
      type: string
      example: MSCU,HLCU
    vesselPartnerCarrierCodeListProvider:
      description: Identifies the code list provider used for the vessel operator and partner carrier codes. If 'vesselPartnerCarrierCode' is populated, the code list provider field is to be populated as well.
      type: string
      enum: [SMDG, NMFTA]
      example: NMFTA
    dateRange:
      description: The time period in weeks for which schedule information is sent. If a voyage begins during the date range but extends past the end of the range, the schedule for the entire voyage is being sent.
      type: string
      example: 4
    transportCallID:
      description: The unique identifier for a transport call
      type: number
      example: 7